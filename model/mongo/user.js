// Generated by CoffeeScript 1.7.1
var User, getUserByCode, getUserById, models, reged, updateInfo;

models = require('./base');

User = models.User;

exports.test = function(req, res, next) {};

exports.usercount = function(next) {
  return User.find({}).count().exec(next);
};

exports.findAll = function(startime, endtime, type, callback) {
  var end, star;
  if (startime === "" && type === "1") {
    return User.find({
      create_at: null
    }).exec(callback);
  }
  if (startime === "" && type === "2") {
    return User.find({
      reser_at: null
    }).exec(callback);
  }
  if (startime === "" && type === "3") {
    return User.find({
      imp_at: null
    }).exec(callback);
  }
  star = new Date(startime);
  end = new Date(endtime);
  console.log(star, end);
  if (type === "") {
    return User.find({
      create_at: {
        $gte: star,
        $lt: end
      }
    }).sort({
      create_at: 1
    }).exec(callback);
  }
  if (type === "1") {
    User.find({
      create_at: {
        $gte: star,
        $lt: end
      }
    }).sort({
      create_at: 1
    }).exec(callback);
  }
  if (type === "2") {
    User.find({
      reser_at: {
        $gte: star,
        $lt: end
      }
    }).sort({
      reser_at: 1
    }).exec(callback);
  }
  if (type === "3") {
    return User.find({
      imp_at: {
        $gte: star,
        $lt: end
      }
    }).sort({
      imp_at: 1
    }).exec(callback);
  }
};

exports.findPages = function(startime, endtime, type, callback) {
  var end, star;
  star = new Date(startime);
  end = new Date(endtime);
  return User.find({
    create_at: {
      $gte: star,
      $lt: end
    }
  }).count().exec(callback);
};

exports.findPage = function(startime, endtime, type, page, callback) {
  var end, size, star;
  star = new Date(startime);
  end = new Date(endtime);
  size = 100;
  return User.find({
    create_at: {
      $gte: star,
      $lt: end
    }
  }).sort({
    create_at: 1
  }).skip(size * page).limit(size).exec(callback);
};

exports.getUserByCarType = function(cartype, vin, callback) {
  return User.findOne({
    cartype: cartype,
    vin: vin
  }, callback);
};

exports.otherUser = function(mobile, next) {
  return User.findOne({
    othermobile: mobile
  }, next);
};

exports.getUserByMobile = function(mobile, next) {
  return User.findOne({
    mobile: mobile
  }, next);
};

exports.getTenoff = function(next) {
  return User.find({
    tenoff: true
  }).count().exec(next);
};

exports.getUserByDealer = function(dealer, star, size, sortfield, startime, endtime, type, search, callback) {
  var data, et, st;
  data = {
    dealer: dealer
  };
  if ((type != null) && (startime != null)) {
    st = new Date(startime);
    et = new Date(endtime);
    if (type === "1") {
      data.create_at = {
        $gte: st,
        $lt: et
      };
    }
    if (type === "2") {
      data.reser_at = {
        $gte: st,
        $lt: et
      };
    }
    if (type === "3") {
      data.imp_at = {
        $gte: st,
        $lt: et
      };
    }
  }
  if ((search != null) && search !== "") {
    eval("data.mobile = /^" + search + "/");
  }
  console.log(data, type != null, startime != null, type);
  return User.find(data).count().exec(function(err, count) {
    console.log(count);
    return User.find(data, '_id create_at username mobile cartype reser_at imp_at changed', {
      sort: sortfield,
      skip: star,
      limit: size
    }, function(err, users) {
      return callback(err, count, users);
    });
  });
};

exports.GetUserByTime = function(dealer, startime, endtime, type, callback) {
  var end, star;
  if (startime === "" && type === "1") {
    return User.find({
      dealer: dealer,
      create_at: null
    }, callback);
  }
  if (startime === "" && type === "2") {
    return User.find({
      dealer: dealer,
      reser_at: null
    }, callback);
  }
  if (startime === "" && type === "3") {
    console.log(type, startime);
    return User.find({
      dealer: dealer,
      imp_at: null
    }, callback);
  }
  star = new Date(parseInt(startime));
  end = new Date(parseInt(endtime));
  if (type === "1") {
    User.find({
      dealer: dealer,
      create_at: {
        $gte: star,
        $lt: end
      }
    }, callback);
  }
  if (type === "2") {
    User.find({
      dealer: dealer,
      reser_at: {
        $gte: star,
        $lt: end
      }
    }, callback);
  }
  if (type === "3") {
    return User.find({
      dealer: dealer,
      imp_at: {
        $gte: star,
        $lt: end
      }
    }, callback);
  }
};

getUserByCode = function(code, dealer, callback) {
  return User.findOne({
    code: code,
    dealer: dealer
  }, callback);
};

exports.getUserByCode = getUserByCode;

exports.getByCode = function(code, callback) {
  return User.findOne({
    code: code
  }, callback);
};

getUserById = function(id, callback) {
  return User.findById(id, callback);
};

exports.getUserById = getUserById;

updateInfo = function(code, dealer_id, othername, othermobile, vin, mileage, customer, usedby, callback) {
  return getUserByCode(code, dealer_id, function(err, users) {
    console.log("update2");
    console.log(callback);
    if (users != null) {
      return User.update({
        mobile: users.mobile
      }, {
        $set: {
          othername: othername,
          othermobile: othermobile,
          vin: vin,
          mileage: mileage,
          customer: customer,
          imp_at: new Date(),
          usedby: usedby
        }
      }, {
        multi: true
      }, callback);
    } else {
      return callback(err, {});
    }
  });
};

exports.updateInfo = updateInfo;

reged = function(mobile, callback) {
  return User.findOne({
    mobile: mobile
  }, callback);
};

exports.reged = reged;

exports.newUserNice = function(code, dealer, thir, cartype, othername, othermobile, vin, mileage, customer, callback) {
  var user;
  user = new User();
  user.code = code;
  user.dealer = dealer;
  user.othername = othername;
  user.othermobile = othermobile;
  user.vin = vin;
  user.mileage = mileage;
  user.customer = customer;
  user.thir = thir;
  user.cartype = cartype;
  user.imp_at = new Date();
  return user.save(callback);
};

exports.newReg = function(code, username, mobile, changed, cartype, lot, tenoff, thirtytwo, province, city, dealer, thir, callback) {
  return reged(mobile, function(err, results) {
    var user;
    if (results != null) {
      return callback(null, null);
    } else {
      user = new User();
      user.code = code;
      user.username = username;
      user.mobile = mobile;
      user.from = 1;
      user.changed = changed;
      user.cartype = cartype;
      if ((lot != null) && lot !== "") {
        console.log("选择了奖品:", lot);
        user.lot = lot;
      }
      user.tenoff = tenoff;
      user.thirtytwo = thirtytwo;
      user.province = province;
      user.city = city;
      user.dealer = dealer;
      user.thir = thir;
      user.create_at = new Date();
      return user.save(callback);
    }
  });
};
